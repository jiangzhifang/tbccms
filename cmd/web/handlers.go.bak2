package main

import (
	"fmt"
	"net/http"
	"strings"
	"unicode/utf8"

	"github.com/jiangzhifang/tbccms/pkg/models"
)

func (app *application) home(w http.ResponseWriter, r *http.Request) {
	/*
		if r.URL.Path != "/" {
			app.notFound(w)
			return
		}
	*/

	c, err := app.coursewares.Latest()
	if err != nil {
		app.serverError(w, err)
		return
	}

	app.render(w, r, "home.page.tmpl", &templateData{
		Coursewares: c,
	})
}

func (app *application) showCourseware(w http.ResponseWriter, r *http.Request) {
	// courseCode := r.URL.Query().Get("coursecode")
	courseCode := r.URL.Query().Get(":coursecode")

	c, err := app.coursewares.Get(courseCode)
	if err == models.ErrNoRecord {
		app.notFound(w)
		return
	} else if err != nil {
		app.serverError(w, err)
		return
	}

	app.render(w, r, "show.page.tmpl", &templateData{
		Courseware: c,
	})

}

func (app *application) createCoursewareForm(w http.ResponseWriter, r *http.Request) {
	app.render(w, r, "create.page.tmpl", nil)
}

func (app *application) createCourseware(w http.ResponseWriter, r *http.Request) {
	errors := make(map[string]string)
	r.ParseMultipartForm(32 << 20)
	files := r.MultipartForm.File["uploadcf"]
	filesLength := len(files)
	if filesLength == 0 {
		errors["coursewareFiles"] = "课程编号不能为空"
	}

	courseCode := r.MultipartForm.Value["coursecode"][0]
	courseTitle := r.MultipartForm.Value["coursetitle"][0]
	active := true

	if r.MultipartForm.Value["active"][0] == "" {
		active = false
	}

	if strings.TrimSpace(courseTitle) == "" {
		errors["courseTitle"] = "课程名称不能为空"
	} else if utf8.RuneCountInString(courseTitle) > 100 {
		errors["courseTitle"] = "课程名称太长(不超过100个字符)"
	}

	if strings.TrimSpace(courseCode) == "" {
		errors["courseCode"] = "课程编号不能为空"
	} else if utf8.RuneCountInString(courseTitle) > 100 {
		errors["courseCode"] = "课程编号太长(不超过100个字符)"
	}

	if len(errors) > 0 {
		fmt.Fprint(w, errors)
		return
	}

	fmt.Println(active)

}
